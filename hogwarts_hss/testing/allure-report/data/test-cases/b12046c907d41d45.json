{
  "uid" : "b12046c907d41d45",
  "name" : "test_mul[counterexample]",
  "fullName" : "test_calc_new.Testcalc#test_mul",
  "historyId" : "3fda29a21389e71e0a2aca46d99f4c84",
  "time" : {
    "start" : 1614171803697,
    "stop" : 1614171803697,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 0.05 == -0.05\n  +0.05\n  --0.05",
  "statusTrace" : "self = <testing.test_calc_new.Testcalc object at 0x000001A2D0D34CD0>, get_calc = <testedcode.calc.Calculator object at 0x000001A2D0CACF10>, get_mul_datas = [-0.5, -0.1, -0.05]\n\n    @allure.story('测试乘法')\n    @pytest.mark.third\n    def test_mul(self,get_calc,get_mul_datas):\n        with allure.step('计算两数相乘'):\n            reslut = get_calc.mul(get_mul_datas[0],get_mul_datas[1])\n>       assert reslut == get_mul_datas[2]\nE       assert 0.05 == -0.05\nE         +0.05\nE         --0.05\n\ntest_calc_new.py:46: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_calc",
    "time" : {
      "start" : 1614171803536,
      "stop" : 1614171803537,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "get_mul_datas",
    "time" : {
      "start" : 1614171803696,
      "stop" : 1614171803696,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 0.05 == -0.05\n  +0.05\n  --0.05",
    "statusTrace" : "self = <testing.test_calc_new.Testcalc object at 0x000001A2D0D34CD0>, get_calc = <testedcode.calc.Calculator object at 0x000001A2D0CACF10>, get_mul_datas = [-0.5, -0.1, -0.05]\n\n    @allure.story('测试乘法')\n    @pytest.mark.third\n    def test_mul(self,get_calc,get_mul_datas):\n        with allure.step('计算两数相乘'):\n            reslut = get_calc.mul(get_mul_datas[0],get_mul_datas[1])\n>       assert reslut == get_mul_datas[2]\nE       assert 0.05 == -0.05\nE         +0.05\nE         --0.05\n\ntest_calc_new.py:46: AssertionError",
    "steps" : [ {
      "name" : "计算两数相乘",
      "time" : {
        "start" : 1614171803697,
        "stop" : 1614171803697,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "get_mul_datas::0",
    "time" : {
      "start" : 1614171803700,
      "stop" : 1614171803701,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "测试乘法"
  }, {
    "name" : "feature",
    "value" : "测试计算器"
  }, {
    "name" : "tag",
    "value" : "run(order=2)"
  }, {
    "name" : "tag",
    "value" : "third"
  }, {
    "name" : "suite",
    "value" : "test_calc_new"
  }, {
    "name" : "subSuite",
    "value" : "Testcalc"
  }, {
    "name" : "host",
    "value" : "houss"
  }, {
    "name" : "thread",
    "value" : "6308-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_calc_new"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "get_mul_datas",
    "value" : "[-0.5, -0.1, -0.05]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=2)", "third" ]
  },
  "source" : "b12046c907d41d45.json",
  "parameterValues" : [ "[-0.5, -0.1, -0.05]" ]
}